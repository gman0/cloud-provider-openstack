kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "openstack-manila-csi.controllerplugin.fullname" . }}
  labels:
    app: {{ include "openstack-manila-csi.name" . }}
    chart: {{ include "openstack-manila-csi.chart" . }}
    component: controllerplugin
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.csi.plugin.controllerplugin.replicas }}
  selector:
    matchLabels:
      app: {{ include "openstack-manila-csi.name" . }}
      component: controllerplugin
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "openstack-manila-csi.name" . }}
        chart: {{ include "openstack-manila-csi.chart" . }}
        component: controllerplugin
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      serviceAccountName: {{ include "openstack-manila-csi.serviceAccountName.controllerplugin" . }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: [{{ include "openstack-manila-csi.name" . }}]
                  - key: component
                    operator: In
                    values: [controllerplugin]
              topologyKey: kubernetes.io/hostname
      containers:
        - name: provisioner
          image: "{{ .Values.csi.provisioner.image.repository }}:{{ .Values.csi.provisioner.image.tag }}"
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            {{- if .Values.csi.plugin.topologyAwarenessEnabled }}
            - "--feature-gates=Topology=true"
            {{- end }}
          env:
            - name: ADDRESS
              value: "unix:///var/lib/kubelet/plugins/{{ .Values.csi.plugin.driverName }}/csi-controllerplugin.sock"
          imagePullPolicy: {{ .Values.csi.provisioner.image.pullPolicy }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /var/lib/kubelet/plugins/{{ .Values.csi.plugin.driverName }}
          resources:
{{ toYaml .Values.csi.provisioner.resources | indent 12 }}
        - name: snapshotter
          image: "{{ .Values.csi.snapshotter.image.repository }}:{{ .Values.csi.snapshotter.image.tag }}"
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: "unix:///var/lib/kubelet/plugins/{{ .Values.csi.plugin.driverName }}/csi-controllerplugin.sock"
          imagePullPolicy: {{ .Values.csi.snapshotter.image.pullPolicy }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /var/lib/kubelet/plugins/{{ .Values.csi.plugin.driverName }}
          resources:
{{ toYaml .Values.csi.snapshotter.resources | indent 12 }}
        - name: resizer
          image: "{{ .Values.csi.resizer.image.repository }}:{{ .Values.csi.resizer.image.tag }}"
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--handle-volume-inuse-error=false"
          env:
            - name: ADDRESS
              value: "unix:///var/lib/kubelet/plugins/{{ .Values.csi.plugin.driverName }}/csi-controllerplugin.sock"
          imagePullPolicy: {{ .Values.csi.snapshotter.image.pullPolicy }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /var/lib/kubelet/plugins/{{ .Values.csi.plugin.driverName }}
          resources:
{{ toYaml .Values.csi.resizer.resources | indent 12 }}
        - name: controllerplugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: "{{ .Values.csi.plugin.image.repository }}:{{ .Values.csi.plugin.image.tag | default .Chart.AppVersion }}"
          command: ["/bin/sh", "-c",
            '/bin/manila-csi-plugin
            --v=5
            --nodeid=$(NODE_ID)
            --endpoint=$(CSI_ENDPOINT)
            --drivername={{ .Values.csi.plugin.driverName }}
            {{- range .Values.csi.plugin.controllerplugin.adapters }}
            --enable-adapter=name={{ .name }}{{ if .nodePluginEndpoint }},node-plugin-endpoint={{ printf "%s/%s" .nodePluginEndpoint.dir .nodePluginEndpoint.sockFile }}{{ end }}
            {{- if .compatibility }}
            --adapter-compatibility=name={{ .name }}{{ if .compatibility.createShareFromSnapshot }},create-share-from-snapshot-enabled={{ .compatibility.createShareFromSnapshot.enabled }},create-share-from-snapshot-mounts-dir={{ .compatibility.createShareFromSnapshot.mountsDir }},rsync-stderr-to-file={{ .compatibility.createShareFromSnapshot.stderrToFile }},rsync-io-timeout={{ .compatibility.createShareFromSnapshot.ioTimeout }}{{ end }}
            {{- end }}
            {{- end }}
            --mount-info-dir=/csi/mountinfo
            {{- if .Values.csi.plugin.topologyAwarenessEnabled }}
            --with-topology
            --nodeaz={{ .Values.csi.plugin.nodeAZ }}
            {{- end }}
            {{- if .Values.csi.plugin.runtimeConfig.enabled }}
            --runtime-config-file=/csi/runtimeconfig/runtimeconfig.json
            {{- end }}
            {{- if .Values.csi.plugin.compatibilitySettings }}
            --compatibility-settings={{ .Values.csi.plugin.compatibilitySettings }}
            {{- end }}'
          ]
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: "unix:///var/lib/kubelet/plugins/{{ .Values.csi.plugin.driverName }}/csi-controllerplugin.sock"
          imagePullPolicy: {{ .Values.csi.plugin.image.pullPolicy }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /var/lib/kubelet/plugins/{{ .Values.csi.plugin.driverName }}
            - name: pod-mounts
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
            {{- if .Values.csi.plugin.runtimeConfig.enabled }}
            - name: runtime-config-dir
              mountPath: /csi/runtimeconfig
              readOnly: true
            {{- end }}
            {{- range .Values.csi.plugin.controllerplugin.adapters }}
            {{- if .nodePluginEndpoint }}
            - name: {{ .name }}-plugin-dir
              mountPath: {{ .nodePluginEndpoint.dir }}
            {{- end }}
            {{- if .compatibility }}
            {{- if .compatibility.createShareFromSnapshot }}
            - name: {{ .name }}-mounts-dir
              mountPath: {{ .compatibility.createShareFromSnapshot.mountsDir }}
              mountPropagation: Bidirectional
            {{- end }}
            {{- end }}
            {{- end }}
            - name: mountinfo-dir
              mountPath: /csi/mountinfo
          resources:
{{ toYaml .Values.csi.plugin.controllerplugin.resources | indent 12 }}
      volumes:
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/{{ .Values.csi.plugin.driverName }}
            type: DirectoryOrCreate
        {{- if .Values.csi.plugin.runtimeConfig.enabled }}
        - name: runtime-config-dir
          configMap:
            name: manila-csi-runtimeconf-cm
        {{- end }}
        - name: pod-mounts
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        {{- range .Values.csi.plugin.controllerplugin.adapters }}
        {{- if .nodePluginEndpoint }}
        - name: {{ .name }}-plugin-dir
          hostPath:
            path: {{ .nodePluginEndpoint.dir }}
            type: DirectoryOrCreate
        {{- end }}
        {{- if .compatibility }}
        {{- if .compatibility.createShareFromSnapshot }}
        - name: {{ .name }}-mounts-dir
          hostPath:
            path: {{ .compatibility.createShareFromSnapshot.mountsDir }}
            type: DirectoryOrCreate
        {{- end }}
        {{- end }}
        {{- end }}
        - name: mountinfo-dir
          hostPath:
            path: /var/lib/kubelet/plugins/{{ .Values.csi.plugin.driverName }}/node/mountinfo
            type: DirectoryOrCreate
    {{- if .Values.csi.plugin.controllerplugin.affinity -}}
      affinity:
{{ toYaml .Values.csi.plugin.controllerplugin.affinity . | indent 8 }}
    {{- end -}}
    {{- if .Values.csi.plugin.controllerplugin.nodeSelector -}}
      nodeSelector:
{{ toYaml .Values.csi.plugin.controllerplugin.nodeSelector | indent 8 }}
    {{- end -}}
    {{- if .Values.csi.plugin.controllerplugin.tolerations -}}
      tolerations:
{{ toYaml .Values.csi.plugin.controllerplugin.tolerations | indent 8 }}
    {{- end -}}
